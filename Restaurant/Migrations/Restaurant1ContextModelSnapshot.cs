// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Models;

namespace Restaurant.Migrations
{
    [DbContext(typeof(Restaurant1Context))]
    partial class Restaurant1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Restaurant.Models.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<Guid?>("PrecioAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UbicacionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PrecioAreaId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("Restaurant.Models.AreaCentroElab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CentroElaboracionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CentroElaboracionId");

                    b.ToTable("AreaCentroElab");
                });

            modelBuilder.Entity("Restaurant.Models.CentrosElaboracion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("CentrosElaboracion");
                });

            modelBuilder.Entity("Restaurant.Models.ClasificacionClientes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("PrecioPorciento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClasificacionClientes");
                });

            modelBuilder.Entity("Restaurant.Models.ClasificacionIngrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("ClasificacionIngrediente");
                });

            modelBuilder.Entity("Restaurant.Models.ClasificacionProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("ClasificacionProducto");
                });

            modelBuilder.Entity("Restaurant.Models.Clientes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClasificacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visitas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasificacionId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Restaurant.Models.Empleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("Restaurant.Models.EstadoMesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("EstadoMesa");
                });

            modelBuilder.Entity("Restaurant.Models.EstadoOrden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("EstadoOrden");
                });

            modelBuilder.Entity("Restaurant.Models.EstadoOrdenProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("EstadoOrdenProducto");
                });

            modelBuilder.Entity("Restaurant.Models.EstadoProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("EstadoProducto");
                });

            modelBuilder.Entity("Restaurant.Models.Ingrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClasificacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Existencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<Guid?>("UnidadMedidaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClasificacionId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("Restaurant.Models.IngredienteProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<Guid>("IngredienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IngredienteId");

                    b.HasIndex("ProductoId");

                    b.ToTable("IngredienteProducto");
                });

            modelBuilder.Entity("Restaurant.Models.Menus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Restaurant.Models.Mesas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("Restaurant.Models.Orden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Cobrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creada")
                        .HasColumnType("datetime2");

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EsmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("MesaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Servida")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("MesaId");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("Restaurant.Models.OrdenProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<Guid?>("CentroElaboracionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CentroElaboracionId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("ProductoId");

                    b.ToTable("OrdenProducto");
                });

            modelBuilder.Entity("Restaurant.Models.PreciosAreas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PreciosAreas");
                });

            modelBuilder.Entity("Restaurant.Models.ProductoMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoMenu");
                });

            modelBuilder.Entity("Restaurant.Models.Productos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClasificacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClasificacionId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Restaurant.Models.Reservas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumPersonas")
                        .HasColumnType("int");

                    b.Property<string>("Reserva")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Restaurant.Models.Ubicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("Restaurant.Models.UnidadesMedidas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("UnidadesMedidas");
                });

            modelBuilder.Entity("Restaurant.Models.Area", b =>
                {
                    b.HasOne("Restaurant.Models.PreciosAreas", "PrecioArea")
                        .WithMany("Areas")
                        .HasForeignKey("PrecioAreaId");

                    b.HasOne("Restaurant.Models.Ubicacion", "Ubicacion")
                        .WithMany("Areas")
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("Restaurant.Models.AreaCentroElab", b =>
                {
                    b.HasOne("Restaurant.Models.Area", "Area")
                        .WithMany("AreaCentroElab")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.CentrosElaboracion", "CentrosElaboracion")
                        .WithMany("AreaCentroElab")
                        .HasForeignKey("CentroElaboracionId");
                });

            modelBuilder.Entity("Restaurant.Models.Clientes", b =>
                {
                    b.HasOne("Restaurant.Models.ClasificacionClientes", "Clasificacion")
                        .WithMany("Clientes")
                        .HasForeignKey("ClasificacionId");
                });

            modelBuilder.Entity("Restaurant.Models.Ingrediente", b =>
                {
                    b.HasOne("Restaurant.Models.ClasificacionIngrediente", "ClasificacionIngrediente")
                        .WithMany("Ingredientes")
                        .HasForeignKey("ClasificacionId");

                    b.HasOne("Restaurant.Models.UnidadesMedidas", "UnidadMedida")
                        .WithMany("Ingredientes")
                        .HasForeignKey("UnidadMedidaId");
                });

            modelBuilder.Entity("Restaurant.Models.IngredienteProducto", b =>
                {
                    b.HasOne("Restaurant.Models.Ingrediente", "Ingrediente")
                        .WithMany("IngredientesProductos")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Productos", "Producto")
                        .WithMany("IngredientesProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurant.Models.Menus", b =>
                {
                    b.HasOne("Restaurant.Models.Area", "Area")
                        .WithMany("Menus")
                        .HasForeignKey("AreaId");
                });

            modelBuilder.Entity("Restaurant.Models.Mesas", b =>
                {
                    b.HasOne("Restaurant.Models.Area", null)
                        .WithMany("Mesas")
                        .HasForeignKey("AreaId");

                    b.HasOne("Restaurant.Models.EstadoMesa", "EstadoMesa")
                        .WithMany("Mesas")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Reservas", "Reserva")
                        .WithMany("Mesas")
                        .HasForeignKey("ReservaId");
                });

            modelBuilder.Entity("Restaurant.Models.Orden", b =>
                {
                    b.HasOne("Restaurant.Models.Empleado", "Empleado")
                        .WithMany("Ordenes")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("Restaurant.Models.EstadoOrden", "EstadoOrden")
                        .WithMany("Ordenes")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Mesas", "Nesa")
                        .WithMany("Ordenes")
                        .HasForeignKey("MesaId");
                });

            modelBuilder.Entity("Restaurant.Models.OrdenProducto", b =>
                {
                    b.HasOne("Restaurant.Models.CentrosElaboracion", "CentrosElaboracion")
                        .WithMany("OrdenesProductos")
                        .HasForeignKey("CentroElaboracionId");

                    b.HasOne("Restaurant.Models.EstadoOrdenProducto", "EstadoOrdenProducto")
                        .WithMany("OrdenesProductos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Orden", "Orden")
                        .WithMany("OrdenProductos")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restaurant.Models.Productos", "Producto")
                        .WithMany("OrdenesProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restaurant.Models.ProductoMenu", b =>
                {
                    b.HasOne("Restaurant.Models.Menus", "Menu")
                        .WithMany("ProductoMenu")
                        .HasForeignKey("MenuId");

                    b.HasOne("Restaurant.Models.Productos", "Producto")
                        .WithMany("ProductoMenu")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("Restaurant.Models.Productos", b =>
                {
                    b.HasOne("Restaurant.Models.ClasificacionProducto", "ClasificacionProducto")
                        .WithMany("Productos")
                        .HasForeignKey("ClasificacionId");

                    b.HasOne("Restaurant.Models.EstadoProducto", "EstadoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("EstadoId");
                });

            modelBuilder.Entity("Restaurant.Models.Reservas", b =>
                {
                    b.HasOne("Restaurant.Models.Clientes", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Restaurant.Models.Empleado", "Empleado")
                        .WithMany("Reservas")
                        .HasForeignKey("EmpleadoId");
                });
#pragma warning restore 612, 618
        }
    }
}
